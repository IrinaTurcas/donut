/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model({ setActive, ...props }) {
  const group = useRef()
  const donut = useRef()
  const icing = useRef()
  const sprinkles = useRef()
  const { nodes, materials } = useGLTF('/donut.glb')
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh 
        onPointerOver={(e) => setActive(donut)} onPointerOut={(e) => setActive(null)}
        onClick={()=>{console.log("donut")}} 
        geometry={nodes.donut.geometry} 
        material={materials['Material.003']} position={[0, 0.02, 0]} 
        ref={donut}
      />
      <group position={[0, 0.02, 0]}>
        <mesh 
          onPointerOver={(e) => setActive(icing)} onPointerOut={(e) => setActive(null)}
          onClick={()=>{console.log("icing")}} 
          geometry={nodes.Torus001.geometry} 
          material={materials.Icing} 
          ref={icing}
        />
        <mesh 
          onPointerOver={(e) => setActive(sprinkles)} onPointerOut={(e) => setActive(null)}
          onClick={()=>{console.log("sprinkle")}} 
          geometry={nodes.Torus001_1.geometry} 
          material={materials.Sprinkles} 
          ref={sprinkles}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/donut.glb')
